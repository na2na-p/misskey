name: Publish Docker Image(misskey-na2na)

on:
  push:
    branches:
      - misskey-na2na
      - topic/docker-build-optimize
  workflow_dispatch:

env:
  DOCKER_TAG_API_URI: https://registry.hub.docker.com/v2/repositories/na2na/misskey-na2na/tags

jobs:
  Check-image-already-exists:
    name: Check image already exists
    runs-on: ubuntu-latest
    outputs:
      tag_exists: ${{ steps.check_docker_hub.outputs.tag_exists }}
      MISSKEY_VERSION: ${{ steps.check_docker_hub.outputs.MISSKEY_VERSION }}
    steps:
      - name: Check out the repo
        uses: actions/checkout@v4.1.1
      - name: Get current version
        id: get_version
        run: |
          echo "MISSKEY_VERSION=$(cat package.json | jq -r '.version')" >> $GITHUB_ENV
      - name: Check Docker Hub
        id: check_docker_hub
        run: |
          DOCKER_HUB_TAGS=$(curl -s https://registry.hub.docker.com/v2/repositories/na2na/misskey-na2na/tags | jq -r '.results[] | .name')
          if [ $(echo $DOCKER_HUB_TAGS | grep -c $MISSKEY_VERSION) -eq 1 ]; then
            echo "Tag $MISSKEY_VERSION already exists on Docker Hub."
          else
            echo "Tag $MISSKEY_VERSION does not exist on Docker Hub."
            echo "tag_exists=false" >> $GITHUB_OUTPUT
            echo "MISSKEY_VERSION=$MISSKEY_VERSION" >> $GITHUB_OUTPUT
          fi

  Build-and-Push-to-Docker-Hub:
    name: Build and Push to Docker Hub
    runs-on: ubuntu-latest
    needs: Check-image-already-exists
    env:
      MISSKEY_VERSION: ${{ needs.Check-image-already-exists.outputs.MISSKEY_VERSION }}
    if: ${{ needs.Check-image-already-exists.outputs.tag_exists == 'false' }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Prepare for build
        id: prepare-for-build
        run: |
          cp .config/docker_example.env .config/docker.env
          cp infra/nginx/.env.example infra/nginx/.env
          echo "sha_short=$(git rev-parse --short HEAD)" >> $GITHUB_OUTPUT
      - name: Cache Docker Build Cache
        uses: actions/cache@v3
        with:
          path: /tmp/.buildx-cache
          key: docker-build-cache-${{ github.ref }}-${{ github.sha }}
          restore-keys: |
            docker-build-cache-${{ github.ref }}
            docker-build-cache-
      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v3
        with:
          driver-opts: network=host
      - name: Generate Docker Image Tag
        id: generate_docker_image_tag
        run: |
          SHA=${{ github.sha }}
          TAG=$(TZ=UTC-9 date '+%Y%m')-${SHA:0:7}
          echo "DOCKER_IMAGE_TAG_CI=$TAG" >> $GITHUB_ENV
          echo TAG $TAG
          echo "docker_image_tag_ci=$TAG" >> $GITHUB_OUTPUT
      - name: Cache Docker Registry
        uses: actions/cache@v3
        with:
          path: /tmp/docker-registry
          key: docker-registry-${{ github.ref }}-${{ github.sha }}
          restore-keys: |
            docker-registry-${{ github.ref }}
            docker-registry-
      - name: Boot-up Local Docker Registry
        run: docker run -d -p 5000:5000 --restart=always --name registry -v /tmp/docker-registry:/var/lib/registry registry:2
      - name: Wait for Docker Registry
        run: npx wait-on tcp:5000
      - name: Build Docker Image
        run: |
          docker buildx bake \
              --builder="${{ steps.buildx.outputs.name }}" \
              --set='*.cache-from=type=local,src=/tmp/.buildx-cache' \
              --set='*.cache-to=type=local,dest=/tmp/.buildx-cache' \
              --push \
              -f 'compose.ci.yml'
      - name: Pull from local registry
        run: |
          docker compose -f compose.ci.yml pull web
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ vars.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      - name: Push to registry
        run: |
          docker tag localhost:5000/misskey-ci:${{ steps.generate_docker_image_tag.outputs.docker_image_tag_ci }} na2na/misskey:release
          docker push na2na/misskey:release
      - name: Push to registry (Only main push)
        if: github.ref == 'refs/heads/main'
        run: |
          docker tag localhost:5000/misskey-ci:${{ steps.generate_docker_image_tag.outputs.docker_image_tag_ci }} na2na/misskey:${{ steps.prepare-for-build.outputs.sha_short }}
          docker push na2na/misskey:${{ steps.prepare-for-build.outputs.sha_short }}
